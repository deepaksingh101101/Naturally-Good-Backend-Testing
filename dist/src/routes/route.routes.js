"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const route_controller_1 = require("../controllers/route.controller");
const checkPermission_1 = require("../middleware/checkPermission");
const router = (0, express_1.Router)();
router.get('/vehicles', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getAllVehicles);
router.get('/vehicle/:id', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getVehicleById);
router.post('/vehicle/', (0, checkPermission_1.checkPermissions)('Create Route'), route_controller_1.createVehicle);
router.put('/vehicle/:id', (0, checkPermission_1.checkPermissions)('Edit Route'), route_controller_1.updateVehicle);
router.put('/vehicle/toggle/:id', (0, checkPermission_1.checkPermissions)('Toggle Route'), route_controller_1.updateVehicleStatus);
router.get('/localitys', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getAllLocalities);
router.get('/locality/:id', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getLocalityById);
router.post('/locality', (0, checkPermission_1.checkPermissions)('Create Route'), route_controller_1.createLocality);
router.put('/locality/:id', (0, checkPermission_1.checkPermissions)('Edit Route'), route_controller_1.updateLocality);
router.put('/locality/toggle/:id', (0, checkPermission_1.checkPermissions)('Toggle Route'), route_controller_1.updateLocalityServiceable);
router.get('/zones', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getAllZones);
router.get('/zone/:id', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getZoneById);
router.post('/zone', (0, checkPermission_1.checkPermissions)('Create Route'), route_controller_1.createZone);
router.put('/zone/:id', (0, checkPermission_1.checkPermissions)('Edit Route'), route_controller_1.updateZone);
router.put('/zone/toggle/:id', (0, checkPermission_1.checkPermissions)('Toggle Route'), route_controller_1.updateZoneServiceable);
router.get('/routes', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getAllRoutes);
router.get('/route/:id', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getRouteById);
router.post('/route', (0, checkPermission_1.checkPermissions)('Create Route'), route_controller_1.createRoute);
router.put('/route/:id', (0, checkPermission_1.checkPermissions)('Edit Route'), route_controller_1.updateRoute);
router.put('/toggle/:id', (0, checkPermission_1.checkPermissions)('Toggle Route'), route_controller_1.toggleRouteStatus);
router.get('/citys', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getAllCity);
router.get('/city/filter', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.filterCities);
router.get('/city/:id', (0, checkPermission_1.checkPermissions)('View Route'), route_controller_1.getCity);
router.post('/city', (0, checkPermission_1.checkPermissions)('Create Route'), route_controller_1.createCity);
router.put('/city/:id', (0, checkPermission_1.checkPermissions)('Edit Route'), route_controller_1.updateCity);
router.put('/city/toggle/:id', (0, checkPermission_1.checkPermissions)('Toggle Route'), route_controller_1.updateServiceableStatus);
exports.default = router;
