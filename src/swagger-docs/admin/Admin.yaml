openapi: 3.0.0
info:
  title: Naturally Good(Admin)
  description: API endpoints for Naturally Goods documented on Swagger
  contact:
    name: Deepak Singh
    email: deepak@techavtar.com
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Local server

components: 
      securitySchemes: 
        bearerAuth: 
          type: 'http'
          scheme: 'bearer'
          bearerFormat: 'JWT'
       
     
  
paths:
  /complaintType/create:
    post:
      summary: Create a new Complaint Type
      tags:
        - Complaints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ComplaintType:
                  type: string
                  example: "Delivery Issue"
                Status:
                  type: string
                  enum: [active, inactive]
                  example: "active"
                Resolution:
                  type: string
                  example: "Resolved by rescheduling delivery"
                Description:
                  type: string
                  example: "The delivery was delayed by 3 days"
      security:
        - bearerAuth: [ ]
      responses:
        201:
          description: Complaint Type created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Complaint Type created successfully
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
                  details:
                    type: string
                    example: Error details message

  /complaintType/allComplaintType:
    get:
      summary: Get all Complaint Types
      security:
        - bearerAuth: []
      tags:
        - Complaints
      responses:
        200:
          description: List of all Complaint Types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "60d0fe4f5311236168a109ca"
                    ComplaintType:
                      type: string
                      example: "Delivery Issue"
                    Status:
                      type: string
                      enum: [active, inactive]
                      example: "active"
                    Resolution:
                      type: string
                      example: "Resolved by rescheduling delivery"
                    Description:
                      type: string
                      example: "The delivery was delayed by 3 days"
                    CreatedBy:
                      type: string
                      example: "60d0fe4f5311236168a109cb"
                    CreatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"

  /complaintType/{id}:
    get:
      summary: Get a Complaint Type by ID
      security:
        - bearerAuth: []
      tags:
        - Complaints
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the complaint type
      responses:
        200:
          description: Complaint Type retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  ComplaintType:
                    type: string
                    example: "Delivery Issue"
                  Status:
                    type: string
                    enum: [active, inactive]
                    example: "active"
                  Resolution:
                    type: string
                    example: "Resolved by rescheduling delivery"
                  Description:
                    type: string
                    example: "The delivery was delayed by 3 days"
                  CreatedBy:
                    type: string
                    example: "60d0fe4f5311236168a109cb"
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
        404:
          description: Complaint Type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Complaint Type not found
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
                  details:
                    type: string
                    example: Error details message

    put:
      summary: Update a Complaint Type by ID
      security:
        - bearerAuth: []
      tags:
        - Complaints
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the complaint type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ComplaintType:
                  type: string
                  example: "Delivery Issue"
                Status:
                  type: string
                  enum: [active, inactive]
                  example: "active"
                Resolution:
                  type: string
                  example: "Resolved by rescheduling delivery"
                Description:
                  type: string
                  example: "The delivery was delayed by 3 days"
      responses:
        200:
          description: Complaint Type updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  ComplaintType:
                    type: string
                    example: "Delivery Issue"
                  Status:
                    type: string
                    enum: [active, inactive]
                    example: "active"
                  Resolution:
                    type: string
                    example: "Resolved by rescheduling delivery"
                  Description:
                    type: string
                    example: "The delivery was delayed by 3 days"
                  CreatedBy:
                    type: string
                    example: "60d0fe4f5311236168a109cb"
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
        404:
          description: Complaint Type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Complaint Type not found
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
                  details:
                    type: string
                    example: Error details message

    delete:
      summary: Delete a Complaint Type by ID
      security:
        - bearerAuth: []
      tags:
        - Complaints
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the complaint type
      responses:
        200:
          description: Complaint Type deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Complaint Type deleted successfully
        404:
          description: Complaint Type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Complaint Type not found
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
                  details:
                    type: string
                    example: Error details message


  /dropDown/types:
    get:
      summary: Get all Types
      tags:
        - Types
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all Types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "60d0fe4f5311236168a109ca"
                    Name:
                      type: string
                      example: "Vegetable"
                    CreatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

    post:
      summary: Create a new Type
      tags:
        - Types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  example: "Vegetable"
      security:
        - bearerAuth: []
      responses:
        201:
          description: Type created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  Name:
                    type: string
                    example: "Vegetable"
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
        400:
          description: Type already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Type already exists
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /dropDown/types/{id}:
    delete:
      summary: Delete a Type by ID
      tags:
        - Types
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the Type
      responses:
        204:
          description: Type deleted successfully
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /dropDown/seasons:
    get:
      summary: Get all Seasons
      tags:
        - Seasons
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all Seasons
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "60d0fe4f5311236168a109ca"
                    Name:
                      type: string
                      example: "Spring"
                    CreatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

    post:
      summary: Create a new Season
      tags:
        - Seasons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  example: "Spring"
      security:
        - bearerAuth: []
      responses:
        201:
          description: Season created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  Name:
                    type: string
                    example: "Spring"
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
        400:
          description: Season already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Season already exists
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /dropDown/seasons/{id}:
    delete:
      summary: Delete a Season by ID
      tags:
        - Seasons
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the Season
      responses:
        204:
          description: Season deleted successfully
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /dropDown/rosters:
    get:
      summary: Get all Rosters
      tags:
        - Rosters
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all Rosters
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "60d0fe4f5311236168a109ca"
                    Name:
                      type: string
                      example: "Mandatory"
                    CreatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-08-06T14:34:08.000Z"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

    post:
      summary: Create a new Roster
      tags:
        - Rosters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  example: "Mandatory"
      security:
        - bearerAuth: []
      responses:
        201:
          description: Roster created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  Name:
                    type: string
                    example: "Mandatory"
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
        400:
          description: Roster already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Roster already exists
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /dropDown/rosters/{id}:
    delete:
      summary: Delete a Roster by ID
      tags:
        - Rosters
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the Roster
      responses:
        204:
          description: Roster deleted successfully
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /product/create:
    post:
      summary: Create a new Product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProductName:
                  type: string
                  example: "Arvi"
                Type:
                  type: string
                  example: "Regular Veggie"
                Season:
                  type: string
                  example: "Monsoon"
                Priority:
                  type: string
                  example: "2"
                Roster:
                  type: string
                  example: "Mandatory"
                VeggieNameInHindi:
                  type: string
                  example: "अरबी"
                UnitQuantity:
                  type: number
                  example: 200
                Price:
                  type: number
                  example: 200
                MinimumUnits:
                  type: number
                  example: 2
                MaximumUnits:
                  type: number
                  example: 5
                Group:
                  type: string
                  example: "Veggies"
                ImageURL:
                  type: string
                  example: "http://example.com/image.jpg"
                Description:
                  type: string
                  example: "Fresh and organic tomatoes"
                Available:
                  type: boolean
                  example: true
                Visibility:
                  type: string
                  example: Public
      security:
        - bearerAuth: []
      responses:
        201:
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  ProductName:
                    type: string
                    example: "Tomato"
                  Type:
                    type: string
                    example: "Vegetable"
                  Season:
                    type: string
                    example: "Summer"
                  Priority:
                    type: string
                    example: "High"
                  Roster:
                    type: string
                    example: "Roster1"
                  VeggieNameInHindi:
                    type: string
                    example: "टमाटर"
                  UnitQuantity:
                    type: number
                    example: 1
                  Price:
                    type: number
                    example: 50
                  MinimumUnits:
                    type: number
                    example: 1
                  MaximumUnits:
                    type: number
                    example: 100
                  Group:
                    type: string
                    example: "Group1"
                  ImageURL:
                    type: string
                    example: "http://example.com/image.jpg"
                  Description:
                    type: string
                    example: "Fresh and organic tomatoes"
                  Available:
                    type: boolean
                    example: true
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-06T14:34:08.000Z"
                  createdBy:
                    type: string
                    example: "60d0fe4f5311236168a109cb"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Type 'Vegetable' does not exist"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error


